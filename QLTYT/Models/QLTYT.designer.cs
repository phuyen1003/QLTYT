#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLTYT.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyTramYTe")]
	public partial class QLTYTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBenh(Benh instance);
    partial void UpdateBenh(Benh instance);
    partial void DeleteBenh(Benh instance);
    partial void InsertVacXin(VacXin instance);
    partial void UpdateVacXin(VacXin instance);
    partial void DeleteVacXin(VacXin instance);
    partial void InsertBenhNhan(BenhNhan instance);
    partial void UpdateBenhNhan(BenhNhan instance);
    partial void DeleteBenhNhan(BenhNhan instance);
    partial void InsertChiSoDinhDuong(ChiSoDinhDuong instance);
    partial void UpdateChiSoDinhDuong(ChiSoDinhDuong instance);
    partial void DeleteChiSoDinhDuong(ChiSoDinhDuong instance);
    partial void InsertChiTietTiemChung(ChiTietTiemChung instance);
    partial void UpdateChiTietTiemChung(ChiTietTiemChung instance);
    partial void DeleteChiTietTiemChung(ChiTietTiemChung instance);
    partial void InsertChiTietTrieuChung(ChiTietTrieuChung instance);
    partial void UpdateChiTietTrieuChung(ChiTietTrieuChung instance);
    partial void DeleteChiTietTrieuChung(ChiTietTrieuChung instance);
    partial void InsertDangKySuKien(DangKySuKien instance);
    partial void UpdateDangKySuKien(DangKySuKien instance);
    partial void DeleteDangKySuKien(DangKySuKien instance);
    partial void InsertGiaDinh(GiaDinh instance);
    partial void UpdateGiaDinh(GiaDinh instance);
    partial void DeleteGiaDinh(GiaDinh instance);
    partial void InsertLichTiemChung(LichTiemChung instance);
    partial void UpdateLichTiemChung(LichTiemChung instance);
    partial void DeleteLichTiemChung(LichTiemChung instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhomBenhNhan(NhomBenhNhan instance);
    partial void UpdateNhomBenhNhan(NhomBenhNhan instance);
    partial void DeleteNhomBenhNhan(NhomBenhNhan instance);
    partial void InsertNhomNhanVien(NhomNhanVien instance);
    partial void UpdateNhomNhanVien(NhomNhanVien instance);
    partial void DeleteNhomNhanVien(NhomNhanVien instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertPhanUng(PhanUng instance);
    partial void UpdatePhanUng(PhanUng instance);
    partial void DeletePhanUng(PhanUng instance);
    partial void InsertPhieuKham(PhieuKham instance);
    partial void UpdatePhieuKham(PhieuKham instance);
    partial void DeletePhieuKham(PhieuKham instance);
    partial void InsertPhieuTiemChung(PhieuTiemChung instance);
    partial void UpdatePhieuTiemChung(PhieuTiemChung instance);
    partial void DeletePhieuTiemChung(PhieuTiemChung instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertSuKien(SuKien instance);
    partial void UpdateSuKien(SuKien instance);
    partial void DeleteSuKien(SuKien instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertThongTinThaiKy(ThongTinThaiKy instance);
    partial void UpdateThongTinThaiKy(ThongTinThaiKy instance);
    partial void DeleteThongTinThaiKy(ThongTinThaiKy instance);
    partial void InsertTrieuChung(TrieuChung instance);
    partial void UpdateTrieuChung(TrieuChung instance);
    partial void DeleteTrieuChung(TrieuChung instance);
    #endregion
		
		public QLTYTDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanLyTramYTeConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLTYTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTYTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTYTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTYTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Benh> Benhs
		{
			get
			{
				return this.GetTable<Benh>();
			}
		}
		
		public System.Data.Linq.Table<VacXin> VacXins
		{
			get
			{
				return this.GetTable<VacXin>();
			}
		}
		
		public System.Data.Linq.Table<BenhNhan> BenhNhans
		{
			get
			{
				return this.GetTable<BenhNhan>();
			}
		}
		
		public System.Data.Linq.Table<ChiSoDinhDuong> ChiSoDinhDuongs
		{
			get
			{
				return this.GetTable<ChiSoDinhDuong>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietTiemChung> ChiTietTiemChungs
		{
			get
			{
				return this.GetTable<ChiTietTiemChung>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietTrieuChung> ChiTietTrieuChungs
		{
			get
			{
				return this.GetTable<ChiTietTrieuChung>();
			}
		}
		
		public System.Data.Linq.Table<DangKySuKien> DangKySuKiens
		{
			get
			{
				return this.GetTable<DangKySuKien>();
			}
		}
		
		public System.Data.Linq.Table<GiaDinh> GiaDinhs
		{
			get
			{
				return this.GetTable<GiaDinh>();
			}
		}
		
		public System.Data.Linq.Table<LichTiemChung> LichTiemChungs
		{
			get
			{
				return this.GetTable<LichTiemChung>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhomBenhNhan> NhomBenhNhans
		{
			get
			{
				return this.GetTable<NhomBenhNhan>();
			}
		}
		
		public System.Data.Linq.Table<NhomNhanVien> NhomNhanViens
		{
			get
			{
				return this.GetTable<NhomNhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<PhanUng> PhanUngs
		{
			get
			{
				return this.GetTable<PhanUng>();
			}
		}
		
		public System.Data.Linq.Table<PhieuKham> PhieuKhams
		{
			get
			{
				return this.GetTable<PhieuKham>();
			}
		}
		
		public System.Data.Linq.Table<PhieuTiemChung> PhieuTiemChungs
		{
			get
			{
				return this.GetTable<PhieuTiemChung>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<SuKien> SuKiens
		{
			get
			{
				return this.GetTable<SuKien>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinThaiKy> ThongTinThaiKies
		{
			get
			{
				return this.GetTable<ThongTinThaiKy>();
			}
		}
		
		public System.Data.Linq.Table<TrieuChung> TrieuChungs
		{
			get
			{
				return this.GetTable<TrieuChung>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_ALLBN")]
		public ISingleResult<SP_ALLBNResult> SP_ALLBN()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SP_ALLBNResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_BMI")]
		public ISingleResult<SP_BMIResult> SP_BMI()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SP_BMIResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Benh")]
	public partial class Benh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBenh;
		
		private string _TenBenh;
		
		private EntitySet<VacXin> _VacXins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBenhChanging(int value);
    partial void OnIdBenhChanged();
    partial void OnTenBenhChanging(string value);
    partial void OnTenBenhChanged();
    #endregion
		
		public Benh()
		{
			this._VacXins = new EntitySet<VacXin>(new Action<VacXin>(this.attach_VacXins), new Action<VacXin>(this.detach_VacXins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBenh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBenh
		{
			get
			{
				return this._IdBenh;
			}
			set
			{
				if ((this._IdBenh != value))
				{
					this.OnIdBenhChanging(value);
					this.SendPropertyChanging();
					this._IdBenh = value;
					this.SendPropertyChanged("IdBenh");
					this.OnIdBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBenh", DbType="NVarChar(100)")]
		public string TenBenh
		{
			get
			{
				return this._TenBenh;
			}
			set
			{
				if ((this._TenBenh != value))
				{
					this.OnTenBenhChanging(value);
					this.SendPropertyChanging();
					this._TenBenh = value;
					this.SendPropertyChanged("TenBenh");
					this.OnTenBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benh_VacXin", Storage="_VacXins", ThisKey="IdBenh", OtherKey="IdBenh")]
		public EntitySet<VacXin> VacXins
		{
			get
			{
				return this._VacXins;
			}
			set
			{
				this._VacXins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VacXins(VacXin entity)
		{
			this.SendPropertyChanging();
			entity.Benh = this;
		}
		
		private void detach_VacXins(VacXin entity)
		{
			this.SendPropertyChanging();
			entity.Benh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VacXin")]
	public partial class VacXin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVacXin;
		
		private System.Nullable<int> _IdBenh;
		
		private string _TenVacXin;
		
		private System.Nullable<double> _LieuLuong;
		
		private string _DonVi;
		
		private System.Nullable<double> _DonGia;
		
		private string _SoLo;
		
		private EntitySet<ChiTietTiemChung> _ChiTietTiemChungs;
		
		private EntitySet<LichTiemChung> _LichTiemChungs;
		
		private EntityRef<Benh> _Benh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVacXinChanging(int value);
    partial void OnIdVacXinChanged();
    partial void OnIdBenhChanging(System.Nullable<int> value);
    partial void OnIdBenhChanged();
    partial void OnTenVacXinChanging(string value);
    partial void OnTenVacXinChanged();
    partial void OnLieuLuongChanging(System.Nullable<double> value);
    partial void OnLieuLuongChanged();
    partial void OnDonViChanging(string value);
    partial void OnDonViChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnSoLoChanging(string value);
    partial void OnSoLoChanged();
    #endregion
		
		public VacXin()
		{
			this._ChiTietTiemChungs = new EntitySet<ChiTietTiemChung>(new Action<ChiTietTiemChung>(this.attach_ChiTietTiemChungs), new Action<ChiTietTiemChung>(this.detach_ChiTietTiemChungs));
			this._LichTiemChungs = new EntitySet<LichTiemChung>(new Action<LichTiemChung>(this.attach_LichTiemChungs), new Action<LichTiemChung>(this.detach_LichTiemChungs));
			this._Benh = default(EntityRef<Benh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVacXin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVacXin
		{
			get
			{
				return this._IdVacXin;
			}
			set
			{
				if ((this._IdVacXin != value))
				{
					this.OnIdVacXinChanging(value);
					this.SendPropertyChanging();
					this._IdVacXin = value;
					this.SendPropertyChanged("IdVacXin");
					this.OnIdVacXinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBenh", DbType="Int")]
		public System.Nullable<int> IdBenh
		{
			get
			{
				return this._IdBenh;
			}
			set
			{
				if ((this._IdBenh != value))
				{
					if (this._Benh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBenhChanging(value);
					this.SendPropertyChanging();
					this._IdBenh = value;
					this.SendPropertyChanged("IdBenh");
					this.OnIdBenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVacXin", DbType="NVarChar(100)")]
		public string TenVacXin
		{
			get
			{
				return this._TenVacXin;
			}
			set
			{
				if ((this._TenVacXin != value))
				{
					this.OnTenVacXinChanging(value);
					this.SendPropertyChanging();
					this._TenVacXin = value;
					this.SendPropertyChanged("TenVacXin");
					this.OnTenVacXinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LieuLuong", DbType="Float")]
		public System.Nullable<double> LieuLuong
		{
			get
			{
				return this._LieuLuong;
			}
			set
			{
				if ((this._LieuLuong != value))
				{
					this.OnLieuLuongChanging(value);
					this.SendPropertyChanging();
					this._LieuLuong = value;
					this.SendPropertyChanged("LieuLuong");
					this.OnLieuLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonVi", DbType="NVarChar(100)")]
		public string DonVi
		{
			get
			{
				return this._DonVi;
			}
			set
			{
				if ((this._DonVi != value))
				{
					this.OnDonViChanging(value);
					this.SendPropertyChanging();
					this._DonVi = value;
					this.SendPropertyChanged("DonVi");
					this.OnDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLo", DbType="NVarChar(100)")]
		public string SoLo
		{
			get
			{
				return this._SoLo;
			}
			set
			{
				if ((this._SoLo != value))
				{
					this.OnSoLoChanging(value);
					this.SendPropertyChanging();
					this._SoLo = value;
					this.SendPropertyChanged("SoLo");
					this.OnSoLoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VacXin_ChiTietTiemChung", Storage="_ChiTietTiemChungs", ThisKey="IdVacXin", OtherKey="IdVacXin")]
		public EntitySet<ChiTietTiemChung> ChiTietTiemChungs
		{
			get
			{
				return this._ChiTietTiemChungs;
			}
			set
			{
				this._ChiTietTiemChungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VacXin_LichTiemChung", Storage="_LichTiemChungs", ThisKey="IdVacXin", OtherKey="IdVacXin")]
		public EntitySet<LichTiemChung> LichTiemChungs
		{
			get
			{
				return this._LichTiemChungs;
			}
			set
			{
				this._LichTiemChungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benh_VacXin", Storage="_Benh", ThisKey="IdBenh", OtherKey="IdBenh", IsForeignKey=true)]
		public Benh Benh
		{
			get
			{
				return this._Benh.Entity;
			}
			set
			{
				Benh previousValue = this._Benh.Entity;
				if (((previousValue != value) 
							|| (this._Benh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benh.Entity = null;
						previousValue.VacXins.Remove(this);
					}
					this._Benh.Entity = value;
					if ((value != null))
					{
						value.VacXins.Add(this);
						this._IdBenh = value.IdBenh;
					}
					else
					{
						this._IdBenh = default(Nullable<int>);
					}
					this.SendPropertyChanged("Benh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTiemChungs(ChiTietTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.VacXin = this;
		}
		
		private void detach_ChiTietTiemChungs(ChiTietTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.VacXin = null;
		}
		
		private void attach_LichTiemChungs(LichTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.VacXin = this;
		}
		
		private void detach_LichTiemChungs(LichTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.VacXin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenhNhan")]
	public partial class BenhNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBenhNhan;
		
		private System.Nullable<int> _IdNhomBenhNhan;
		
		private System.Nullable<int> _IdGiaDinh;
		
		private string _HoTen;
		
		private string _CCCD;
		
		private string _BHYT;
		
		private System.Nullable<int> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SDT;
		
		private string _Email;
		
		private string _DiaChi;
		
		private System.Nullable<double> _ChieuCao;
		
		private System.Nullable<double> _CanNang;
		
		private EntitySet<PhieuKham> _PhieuKhams;
		
		private EntitySet<PhieuTiemChung> _PhieuTiemChungs;
		
		private EntityRef<GiaDinh> _GiaDinh;
		
		private EntityRef<NhomBenhNhan> _NhomBenhNhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBenhNhanChanging(int value);
    partial void OnIdBenhNhanChanged();
    partial void OnIdNhomBenhNhanChanging(System.Nullable<int> value);
    partial void OnIdNhomBenhNhanChanged();
    partial void OnIdGiaDinhChanging(System.Nullable<int> value);
    partial void OnIdGiaDinhChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnBHYTChanging(string value);
    partial void OnBHYTChanged();
    partial void OnGioiTinhChanging(System.Nullable<int> value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnChieuCaoChanging(System.Nullable<double> value);
    partial void OnChieuCaoChanged();
    partial void OnCanNangChanging(System.Nullable<double> value);
    partial void OnCanNangChanged();
    #endregion
		
		public BenhNhan()
		{
			this._PhieuKhams = new EntitySet<PhieuKham>(new Action<PhieuKham>(this.attach_PhieuKhams), new Action<PhieuKham>(this.detach_PhieuKhams));
			this._PhieuTiemChungs = new EntitySet<PhieuTiemChung>(new Action<PhieuTiemChung>(this.attach_PhieuTiemChungs), new Action<PhieuTiemChung>(this.detach_PhieuTiemChungs));
			this._GiaDinh = default(EntityRef<GiaDinh>);
			this._NhomBenhNhan = default(EntityRef<NhomBenhNhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBenhNhan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBenhNhan
		{
			get
			{
				return this._IdBenhNhan;
			}
			set
			{
				if ((this._IdBenhNhan != value))
				{
					this.OnIdBenhNhanChanging(value);
					this.SendPropertyChanging();
					this._IdBenhNhan = value;
					this.SendPropertyChanged("IdBenhNhan");
					this.OnIdBenhNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhomBenhNhan", DbType="Int")]
		public System.Nullable<int> IdNhomBenhNhan
		{
			get
			{
				return this._IdNhomBenhNhan;
			}
			set
			{
				if ((this._IdNhomBenhNhan != value))
				{
					if (this._NhomBenhNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhomBenhNhanChanging(value);
					this.SendPropertyChanging();
					this._IdNhomBenhNhan = value;
					this.SendPropertyChanged("IdNhomBenhNhan");
					this.OnIdNhomBenhNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGiaDinh", DbType="Int")]
		public System.Nullable<int> IdGiaDinh
		{
			get
			{
				return this._IdGiaDinh;
			}
			set
			{
				if ((this._IdGiaDinh != value))
				{
					if (this._GiaDinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGiaDinhChanging(value);
					this.SendPropertyChanging();
					this._IdGiaDinh = value;
					this.SendPropertyChanged("IdGiaDinh");
					this.OnIdGiaDinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(50)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHYT", DbType="NVarChar(100)")]
		public string BHYT
		{
			get
			{
				return this._BHYT;
			}
			set
			{
				if ((this._BHYT != value))
				{
					this.OnBHYTChanging(value);
					this.SendPropertyChanging();
					this._BHYT = value;
					this.SendPropertyChanged("BHYT");
					this.OnBHYTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Int")]
		public System.Nullable<int> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(100)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChieuCao", DbType="Float")]
		public System.Nullable<double> ChieuCao
		{
			get
			{
				return this._ChieuCao;
			}
			set
			{
				if ((this._ChieuCao != value))
				{
					this.OnChieuCaoChanging(value);
					this.SendPropertyChanging();
					this._ChieuCao = value;
					this.SendPropertyChanged("ChieuCao");
					this.OnChieuCaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanNang", DbType="Float")]
		public System.Nullable<double> CanNang
		{
			get
			{
				return this._CanNang;
			}
			set
			{
				if ((this._CanNang != value))
				{
					this.OnCanNangChanging(value);
					this.SendPropertyChanging();
					this._CanNang = value;
					this.SendPropertyChanged("CanNang");
					this.OnCanNangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_PhieuKham", Storage="_PhieuKhams", ThisKey="IdBenhNhan", OtherKey="IdBenhNhan")]
		public EntitySet<PhieuKham> PhieuKhams
		{
			get
			{
				return this._PhieuKhams;
			}
			set
			{
				this._PhieuKhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_PhieuTiemChung", Storage="_PhieuTiemChungs", ThisKey="IdBenhNhan", OtherKey="IdBenhNhan")]
		public EntitySet<PhieuTiemChung> PhieuTiemChungs
		{
			get
			{
				return this._PhieuTiemChungs;
			}
			set
			{
				this._PhieuTiemChungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaDinh_BenhNhan", Storage="_GiaDinh", ThisKey="IdGiaDinh", OtherKey="IdGiaDinh", IsForeignKey=true)]
		public GiaDinh GiaDinh
		{
			get
			{
				return this._GiaDinh.Entity;
			}
			set
			{
				GiaDinh previousValue = this._GiaDinh.Entity;
				if (((previousValue != value) 
							|| (this._GiaDinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaDinh.Entity = null;
						previousValue.BenhNhans.Remove(this);
					}
					this._GiaDinh.Entity = value;
					if ((value != null))
					{
						value.BenhNhans.Add(this);
						this._IdGiaDinh = value.IdGiaDinh;
					}
					else
					{
						this._IdGiaDinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiaDinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomBenhNhan_BenhNhan", Storage="_NhomBenhNhan", ThisKey="IdNhomBenhNhan", OtherKey="IdNhomBenhNhan", IsForeignKey=true)]
		public NhomBenhNhan NhomBenhNhan
		{
			get
			{
				return this._NhomBenhNhan.Entity;
			}
			set
			{
				NhomBenhNhan previousValue = this._NhomBenhNhan.Entity;
				if (((previousValue != value) 
							|| (this._NhomBenhNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomBenhNhan.Entity = null;
						previousValue.BenhNhans.Remove(this);
					}
					this._NhomBenhNhan.Entity = value;
					if ((value != null))
					{
						value.BenhNhans.Add(this);
						this._IdNhomBenhNhan = value.IdNhomBenhNhan;
					}
					else
					{
						this._IdNhomBenhNhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhomBenhNhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = this;
		}
		
		private void detach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = null;
		}
		
		private void attach_PhieuTiemChungs(PhieuTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = this;
		}
		
		private void detach_PhieuTiemChungs(PhieuTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.BenhNhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiSoDinhDuong")]
	public partial class ChiSoDinhDuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdChiSoDinhDuong;
		
		private System.Nullable<double> _BMIMin;
		
		private System.Nullable<double> _BMIMax;
		
		private string _CanhBao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChiSoDinhDuongChanging(int value);
    partial void OnIdChiSoDinhDuongChanged();
    partial void OnBMIMinChanging(System.Nullable<double> value);
    partial void OnBMIMinChanged();
    partial void OnBMIMaxChanging(System.Nullable<double> value);
    partial void OnBMIMaxChanged();
    partial void OnCanhBaoChanging(string value);
    partial void OnCanhBaoChanged();
    #endregion
		
		public ChiSoDinhDuong()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiSoDinhDuong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdChiSoDinhDuong
		{
			get
			{
				return this._IdChiSoDinhDuong;
			}
			set
			{
				if ((this._IdChiSoDinhDuong != value))
				{
					this.OnIdChiSoDinhDuongChanging(value);
					this.SendPropertyChanging();
					this._IdChiSoDinhDuong = value;
					this.SendPropertyChanged("IdChiSoDinhDuong");
					this.OnIdChiSoDinhDuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMIMin", DbType="Float")]
		public System.Nullable<double> BMIMin
		{
			get
			{
				return this._BMIMin;
			}
			set
			{
				if ((this._BMIMin != value))
				{
					this.OnBMIMinChanging(value);
					this.SendPropertyChanging();
					this._BMIMin = value;
					this.SendPropertyChanged("BMIMin");
					this.OnBMIMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMIMax", DbType="Float")]
		public System.Nullable<double> BMIMax
		{
			get
			{
				return this._BMIMax;
			}
			set
			{
				if ((this._BMIMax != value))
				{
					this.OnBMIMaxChanging(value);
					this.SendPropertyChanging();
					this._BMIMax = value;
					this.SendPropertyChanged("BMIMax");
					this.OnBMIMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanhBao", DbType="NVarChar(500)")]
		public string CanhBao
		{
			get
			{
				return this._CanhBao;
			}
			set
			{
				if ((this._CanhBao != value))
				{
					this.OnCanhBaoChanging(value);
					this.SendPropertyChanging();
					this._CanhBao = value;
					this.SendPropertyChanged("CanhBao");
					this.OnCanhBaoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietTiemChung")]
	public partial class ChiTietTiemChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdChiTietTiemChung;
		
		private System.Nullable<int> _IdSoPhieu;
		
		private System.Nullable<int> _IdChiTietTrieuChung;
		
		private System.Nullable<int> _IdVacXin;
		
		private string _SoLo;
		
		private string _DiaDiem;
		
		private string _GhiChu;
		
		private string _HinhAnh;
		
		private EntityRef<VacXin> _VacXin;
		
		private EntityRef<PhieuTiemChung> _PhieuTiemChung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChiTietTiemChungChanging(int value);
    partial void OnIdChiTietTiemChungChanged();
    partial void OnIdSoPhieuChanging(System.Nullable<int> value);
    partial void OnIdSoPhieuChanged();
    partial void OnIdChiTietTrieuChungChanging(System.Nullable<int> value);
    partial void OnIdChiTietTrieuChungChanged();
    partial void OnIdVacXinChanging(System.Nullable<int> value);
    partial void OnIdVacXinChanged();
    partial void OnSoLoChanging(string value);
    partial void OnSoLoChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public ChiTietTiemChung()
		{
			this._VacXin = default(EntityRef<VacXin>);
			this._PhieuTiemChung = default(EntityRef<PhieuTiemChung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiTietTiemChung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdChiTietTiemChung
		{
			get
			{
				return this._IdChiTietTiemChung;
			}
			set
			{
				if ((this._IdChiTietTiemChung != value))
				{
					this.OnIdChiTietTiemChungChanging(value);
					this.SendPropertyChanging();
					this._IdChiTietTiemChung = value;
					this.SendPropertyChanged("IdChiTietTiemChung");
					this.OnIdChiTietTiemChungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSoPhieu", DbType="Int")]
		public System.Nullable<int> IdSoPhieu
		{
			get
			{
				return this._IdSoPhieu;
			}
			set
			{
				if ((this._IdSoPhieu != value))
				{
					if (this._PhieuTiemChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSoPhieuChanging(value);
					this.SendPropertyChanging();
					this._IdSoPhieu = value;
					this.SendPropertyChanged("IdSoPhieu");
					this.OnIdSoPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiTietTrieuChung", DbType="Int")]
		public System.Nullable<int> IdChiTietTrieuChung
		{
			get
			{
				return this._IdChiTietTrieuChung;
			}
			set
			{
				if ((this._IdChiTietTrieuChung != value))
				{
					this.OnIdChiTietTrieuChungChanging(value);
					this.SendPropertyChanging();
					this._IdChiTietTrieuChung = value;
					this.SendPropertyChanged("IdChiTietTrieuChung");
					this.OnIdChiTietTrieuChungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVacXin", DbType="Int")]
		public System.Nullable<int> IdVacXin
		{
			get
			{
				return this._IdVacXin;
			}
			set
			{
				if ((this._IdVacXin != value))
				{
					if (this._VacXin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVacXinChanging(value);
					this.SendPropertyChanging();
					this._IdVacXin = value;
					this.SendPropertyChanged("IdVacXin");
					this.OnIdVacXinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLo", DbType="NVarChar(50)")]
		public string SoLo
		{
			get
			{
				return this._SoLo;
			}
			set
			{
				if ((this._SoLo != value))
				{
					this.OnSoLoChanging(value);
					this.SendPropertyChanging();
					this._SoLo = value;
					this.SendPropertyChanged("SoLo");
					this.OnSoLoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(100)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VacXin_ChiTietTiemChung", Storage="_VacXin", ThisKey="IdVacXin", OtherKey="IdVacXin", IsForeignKey=true)]
		public VacXin VacXin
		{
			get
			{
				return this._VacXin.Entity;
			}
			set
			{
				VacXin previousValue = this._VacXin.Entity;
				if (((previousValue != value) 
							|| (this._VacXin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VacXin.Entity = null;
						previousValue.ChiTietTiemChungs.Remove(this);
					}
					this._VacXin.Entity = value;
					if ((value != null))
					{
						value.ChiTietTiemChungs.Add(this);
						this._IdVacXin = value.IdVacXin;
					}
					else
					{
						this._IdVacXin = default(Nullable<int>);
					}
					this.SendPropertyChanged("VacXin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTiemChung_ChiTietTiemChung", Storage="_PhieuTiemChung", ThisKey="IdSoPhieu", OtherKey="IdSoPhieu", IsForeignKey=true)]
		public PhieuTiemChung PhieuTiemChung
		{
			get
			{
				return this._PhieuTiemChung.Entity;
			}
			set
			{
				PhieuTiemChung previousValue = this._PhieuTiemChung.Entity;
				if (((previousValue != value) 
							|| (this._PhieuTiemChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuTiemChung.Entity = null;
						previousValue.ChiTietTiemChungs.Remove(this);
					}
					this._PhieuTiemChung.Entity = value;
					if ((value != null))
					{
						value.ChiTietTiemChungs.Add(this);
						this._IdSoPhieu = value.IdSoPhieu;
					}
					else
					{
						this._IdSoPhieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuTiemChung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietTrieuChung")]
	public partial class ChiTietTrieuChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdChiTietTrieuChung;
		
		private System.Nullable<int> _IdPhanUng;
		
		private System.Nullable<int> _IdTrieuChung;
		
		private EntityRef<PhanUng> _PhanUng;
		
		private EntityRef<TrieuChung> _TrieuChung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChiTietTrieuChungChanging(int value);
    partial void OnIdChiTietTrieuChungChanged();
    partial void OnIdPhanUngChanging(System.Nullable<int> value);
    partial void OnIdPhanUngChanged();
    partial void OnIdTrieuChungChanging(System.Nullable<int> value);
    partial void OnIdTrieuChungChanged();
    #endregion
		
		public ChiTietTrieuChung()
		{
			this._PhanUng = default(EntityRef<PhanUng>);
			this._TrieuChung = default(EntityRef<TrieuChung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiTietTrieuChung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdChiTietTrieuChung
		{
			get
			{
				return this._IdChiTietTrieuChung;
			}
			set
			{
				if ((this._IdChiTietTrieuChung != value))
				{
					this.OnIdChiTietTrieuChungChanging(value);
					this.SendPropertyChanging();
					this._IdChiTietTrieuChung = value;
					this.SendPropertyChanged("IdChiTietTrieuChung");
					this.OnIdChiTietTrieuChungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhanUng", DbType="Int")]
		public System.Nullable<int> IdPhanUng
		{
			get
			{
				return this._IdPhanUng;
			}
			set
			{
				if ((this._IdPhanUng != value))
				{
					if (this._PhanUng.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPhanUngChanging(value);
					this.SendPropertyChanging();
					this._IdPhanUng = value;
					this.SendPropertyChanged("IdPhanUng");
					this.OnIdPhanUngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrieuChung", DbType="Int")]
		public System.Nullable<int> IdTrieuChung
		{
			get
			{
				return this._IdTrieuChung;
			}
			set
			{
				if ((this._IdTrieuChung != value))
				{
					if (this._TrieuChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTrieuChungChanging(value);
					this.SendPropertyChanging();
					this._IdTrieuChung = value;
					this.SendPropertyChanged("IdTrieuChung");
					this.OnIdTrieuChungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanUng_ChiTietTrieuChung", Storage="_PhanUng", ThisKey="IdPhanUng", OtherKey="IdPhanUng", IsForeignKey=true, DeleteRule="CASCADE")]
		public PhanUng PhanUng
		{
			get
			{
				return this._PhanUng.Entity;
			}
			set
			{
				PhanUng previousValue = this._PhanUng.Entity;
				if (((previousValue != value) 
							|| (this._PhanUng.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanUng.Entity = null;
						previousValue.ChiTietTrieuChungs.Remove(this);
					}
					this._PhanUng.Entity = value;
					if ((value != null))
					{
						value.ChiTietTrieuChungs.Add(this);
						this._IdPhanUng = value.IdPhanUng;
					}
					else
					{
						this._IdPhanUng = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhanUng");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrieuChung_ChiTietTrieuChung", Storage="_TrieuChung", ThisKey="IdTrieuChung", OtherKey="IdTrieuChung", IsForeignKey=true)]
		public TrieuChung TrieuChung
		{
			get
			{
				return this._TrieuChung.Entity;
			}
			set
			{
				TrieuChung previousValue = this._TrieuChung.Entity;
				if (((previousValue != value) 
							|| (this._TrieuChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrieuChung.Entity = null;
						previousValue.ChiTietTrieuChungs.Remove(this);
					}
					this._TrieuChung.Entity = value;
					if ((value != null))
					{
						value.ChiTietTrieuChungs.Add(this);
						this._IdTrieuChung = value.IdTrieuChung;
					}
					else
					{
						this._IdTrieuChung = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrieuChung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangKySuKien")]
	public partial class DangKySuKien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDangKySuKien;
		
		private System.Nullable<int> _IdSuKien;
		
		private string _Email;
		
		private string _HoTen;
		
		private string _CCCD;
		
		private System.Nullable<int> _GioiTinh;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.Nullable<System.DateTime> _NgayDangKy;
		
		private EntityRef<SuKien> _SuKien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDangKySuKienChanging(int value);
    partial void OnIdDangKySuKienChanged();
    partial void OnIdSuKienChanging(System.Nullable<int> value);
    partial void OnIdSuKienChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnGioiTinhChanging(System.Nullable<int> value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgayDangKyChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangKyChanged();
    #endregion
		
		public DangKySuKien()
		{
			this._SuKien = default(EntityRef<SuKien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDangKySuKien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDangKySuKien
		{
			get
			{
				return this._IdDangKySuKien;
			}
			set
			{
				if ((this._IdDangKySuKien != value))
				{
					this.OnIdDangKySuKienChanging(value);
					this.SendPropertyChanging();
					this._IdDangKySuKien = value;
					this.SendPropertyChanged("IdDangKySuKien");
					this.OnIdDangKySuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSuKien", DbType="Int")]
		public System.Nullable<int> IdSuKien
		{
			get
			{
				return this._IdSuKien;
			}
			set
			{
				if ((this._IdSuKien != value))
				{
					if (this._SuKien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSuKienChanging(value);
					this.SendPropertyChanging();
					this._IdSuKien = value;
					this.SendPropertyChanged("IdSuKien");
					this.OnIdSuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(100)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Int")]
		public System.Nullable<int> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(100)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDangKy", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDangKy
		{
			get
			{
				return this._NgayDangKy;
			}
			set
			{
				if ((this._NgayDangKy != value))
				{
					this.OnNgayDangKyChanging(value);
					this.SendPropertyChanging();
					this._NgayDangKy = value;
					this.SendPropertyChanged("NgayDangKy");
					this.OnNgayDangKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuKien_DangKySuKien", Storage="_SuKien", ThisKey="IdSuKien", OtherKey="IdSuKien", IsForeignKey=true)]
		public SuKien SuKien
		{
			get
			{
				return this._SuKien.Entity;
			}
			set
			{
				SuKien previousValue = this._SuKien.Entity;
				if (((previousValue != value) 
							|| (this._SuKien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuKien.Entity = null;
						previousValue.DangKySuKiens.Remove(this);
					}
					this._SuKien.Entity = value;
					if ((value != null))
					{
						value.DangKySuKiens.Add(this);
						this._IdSuKien = value.IdSuKien;
					}
					else
					{
						this._IdSuKien = default(Nullable<int>);
					}
					this.SendPropertyChanged("SuKien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaDinh")]
	public partial class GiaDinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdGiaDinh;
		
		private string _TenChuHo;
		
		private string _CCCD;
		
		private System.Nullable<int> _SoNguoi;
		
		private string _SDT;
		
		private string _Email;
		
		private EntitySet<BenhNhan> _BenhNhans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGiaDinhChanging(int value);
    partial void OnIdGiaDinhChanged();
    partial void OnTenChuHoChanging(string value);
    partial void OnTenChuHoChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnSoNguoiChanging(System.Nullable<int> value);
    partial void OnSoNguoiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public GiaDinh()
		{
			this._BenhNhans = new EntitySet<BenhNhan>(new Action<BenhNhan>(this.attach_BenhNhans), new Action<BenhNhan>(this.detach_BenhNhans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGiaDinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdGiaDinh
		{
			get
			{
				return this._IdGiaDinh;
			}
			set
			{
				if ((this._IdGiaDinh != value))
				{
					this.OnIdGiaDinhChanging(value);
					this.SendPropertyChanging();
					this._IdGiaDinh = value;
					this.SendPropertyChanged("IdGiaDinh");
					this.OnIdGiaDinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuHo", DbType="NVarChar(100)")]
		public string TenChuHo
		{
			get
			{
				return this._TenChuHo;
			}
			set
			{
				if ((this._TenChuHo != value))
				{
					this.OnTenChuHoChanging(value);
					this.SendPropertyChanging();
					this._TenChuHo = value;
					this.SendPropertyChanged("TenChuHo");
					this.OnTenChuHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(50)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNguoi", DbType="Int")]
		public System.Nullable<int> SoNguoi
		{
			get
			{
				return this._SoNguoi;
			}
			set
			{
				if ((this._SoNguoi != value))
				{
					this.OnSoNguoiChanging(value);
					this.SendPropertyChanging();
					this._SoNguoi = value;
					this.SendPropertyChanged("SoNguoi");
					this.OnSoNguoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(100)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaDinh_BenhNhan", Storage="_BenhNhans", ThisKey="IdGiaDinh", OtherKey="IdGiaDinh")]
		public EntitySet<BenhNhan> BenhNhans
		{
			get
			{
				return this._BenhNhans;
			}
			set
			{
				this._BenhNhans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenhNhans(BenhNhan entity)
		{
			this.SendPropertyChanging();
			entity.GiaDinh = this;
		}
		
		private void detach_BenhNhans(BenhNhan entity)
		{
			this.SendPropertyChanging();
			entity.GiaDinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichTiemChung")]
	public partial class LichTiemChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLichTiemChung;
		
		private System.Nullable<int> _IdVacXin;
		
		private System.Nullable<System.DateTime> _NgayTiem;
		
		private string _GhiChu;
		
		private string _TrangThai;
		
		private EntityRef<VacXin> _VacXin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLichTiemChungChanging(int value);
    partial void OnIdLichTiemChungChanged();
    partial void OnIdVacXinChanging(System.Nullable<int> value);
    partial void OnIdVacXinChanged();
    partial void OnNgayTiemChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTiemChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public LichTiemChung()
		{
			this._VacXin = default(EntityRef<VacXin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLichTiemChung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLichTiemChung
		{
			get
			{
				return this._IdLichTiemChung;
			}
			set
			{
				if ((this._IdLichTiemChung != value))
				{
					this.OnIdLichTiemChungChanging(value);
					this.SendPropertyChanging();
					this._IdLichTiemChung = value;
					this.SendPropertyChanged("IdLichTiemChung");
					this.OnIdLichTiemChungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVacXin", DbType="Int")]
		public System.Nullable<int> IdVacXin
		{
			get
			{
				return this._IdVacXin;
			}
			set
			{
				if ((this._IdVacXin != value))
				{
					if (this._VacXin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVacXinChanging(value);
					this.SendPropertyChanging();
					this._IdVacXin = value;
					this.SendPropertyChanged("IdVacXin");
					this.OnIdVacXinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTiem", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTiem
		{
			get
			{
				return this._NgayTiem;
			}
			set
			{
				if ((this._NgayTiem != value))
				{
					this.OnNgayTiemChanging(value);
					this.SendPropertyChanging();
					this._NgayTiem = value;
					this.SendPropertyChanged("NgayTiem");
					this.OnNgayTiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(100)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VacXin_LichTiemChung", Storage="_VacXin", ThisKey="IdVacXin", OtherKey="IdVacXin", IsForeignKey=true)]
		public VacXin VacXin
		{
			get
			{
				return this._VacXin.Entity;
			}
			set
			{
				VacXin previousValue = this._VacXin.Entity;
				if (((previousValue != value) 
							|| (this._VacXin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VacXin.Entity = null;
						previousValue.LichTiemChungs.Remove(this);
					}
					this._VacXin.Entity = value;
					if ((value != null))
					{
						value.LichTiemChungs.Add(this);
						this._IdVacXin = value.IdVacXin;
					}
					else
					{
						this._IdVacXin = default(Nullable<int>);
					}
					this.SendPropertyChanged("VacXin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhong")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLoaiPhong;
		
		private string _TenLoaiPhong;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLoaiPhongChanging(int value);
    partial void OnIdLoaiPhongChanged();
    partial void OnTenLoaiPhongChanging(string value);
    partial void OnTenLoaiPhongChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLoaiPhong
		{
			get
			{
				return this._IdLoaiPhong;
			}
			set
			{
				if ((this._IdLoaiPhong != value))
				{
					this.OnIdLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiPhong = value;
					this.SendPropertyChanged("IdLoaiPhong");
					this.OnIdLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiPhong", DbType="NVarChar(100)")]
		public string TenLoaiPhong
		{
			get
			{
				return this._TenLoaiPhong;
			}
			set
			{
				if ((this._TenLoaiPhong != value))
				{
					this.OnTenLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiPhong = value;
					this.SendPropertyChanged("TenLoaiPhong");
					this.OnTenLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_Phongs", ThisKey="IdLoaiPhong", OtherKey="IdLoaiPhong")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNhanVien;
		
		private System.Nullable<int> _IdNhomNhanVien;
		
		private string _HoTen;
		
		private string _SDT;
		
		private System.Nullable<int> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _CCCD;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _HinhAnh;
		
		private EntitySet<PhieuKham> _PhieuKhams;
		
		private EntitySet<PhieuTiemChung> _PhieuTiemChungs;
		
		private EntitySet<SuKien> _SuKiens;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntityRef<NhomNhanVien> _NhomNhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNhanVienChanging(int value);
    partial void OnIdNhanVienChanged();
    partial void OnIdNhomNhanVienChanging(System.Nullable<int> value);
    partial void OnIdNhomNhanVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnGioiTinhChanging(System.Nullable<int> value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public NhanVien()
		{
			this._PhieuKhams = new EntitySet<PhieuKham>(new Action<PhieuKham>(this.attach_PhieuKhams), new Action<PhieuKham>(this.detach_PhieuKhams));
			this._PhieuTiemChungs = new EntitySet<PhieuTiemChung>(new Action<PhieuTiemChung>(this.attach_PhieuTiemChungs), new Action<PhieuTiemChung>(this.detach_PhieuTiemChungs));
			this._SuKiens = new EntitySet<SuKien>(new Action<SuKien>(this.attach_SuKiens), new Action<SuKien>(this.detach_SuKiens));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._NhomNhanVien = default(EntityRef<NhomNhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNhanVien
		{
			get
			{
				return this._IdNhanVien;
			}
			set
			{
				if ((this._IdNhanVien != value))
				{
					this.OnIdNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhanVien = value;
					this.SendPropertyChanged("IdNhanVien");
					this.OnIdNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhomNhanVien", DbType="Int")]
		public System.Nullable<int> IdNhomNhanVien
		{
			get
			{
				return this._IdNhomNhanVien;
			}
			set
			{
				if ((this._IdNhomNhanVien != value))
				{
					if (this._NhomNhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhomNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhomNhanVien = value;
					this.SendPropertyChanged("IdNhomNhanVien");
					this.OnIdNhomNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Int")]
		public System.Nullable<int> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(50)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuKham", Storage="_PhieuKhams", ThisKey="IdNhanVien", OtherKey="IdNhanVien")]
		public EntitySet<PhieuKham> PhieuKhams
		{
			get
			{
				return this._PhieuKhams;
			}
			set
			{
				this._PhieuKhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuTiemChung", Storage="_PhieuTiemChungs", ThisKey="IdNhanVien", OtherKey="IdNhanVien")]
		public EntitySet<PhieuTiemChung> PhieuTiemChungs
		{
			get
			{
				return this._PhieuTiemChungs;
			}
			set
			{
				this._PhieuTiemChungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_SuKien", Storage="_SuKiens", ThisKey="IdNhanVien", OtherKey="IdNhanVien")]
		public EntitySet<SuKien> SuKiens
		{
			get
			{
				return this._SuKiens;
			}
			set
			{
				this._SuKiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="IdNhanVien", OtherKey="IDNV")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_NhanVien", Storage="_NhomNhanVien", ThisKey="IdNhomNhanVien", OtherKey="IdNhomNhanVien", IsForeignKey=true)]
		public NhomNhanVien NhomNhanVien
		{
			get
			{
				return this._NhomNhanVien.Entity;
			}
			set
			{
				NhomNhanVien previousValue = this._NhomNhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhomNhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomNhanVien.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._NhomNhanVien.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._IdNhomNhanVien = value.IdNhomNhanVien;
					}
					else
					{
						this._IdNhomNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhomNhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuTiemChungs(PhieuTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuTiemChungs(PhieuTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_SuKiens(SuKien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_SuKiens(SuKien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomBenhNhan")]
	public partial class NhomBenhNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNhomBenhNhan;
		
		private string _TenNhom;
		
		private EntitySet<BenhNhan> _BenhNhans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNhomBenhNhanChanging(int value);
    partial void OnIdNhomBenhNhanChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    #endregion
		
		public NhomBenhNhan()
		{
			this._BenhNhans = new EntitySet<BenhNhan>(new Action<BenhNhan>(this.attach_BenhNhans), new Action<BenhNhan>(this.detach_BenhNhans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhomBenhNhan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNhomBenhNhan
		{
			get
			{
				return this._IdNhomBenhNhan;
			}
			set
			{
				if ((this._IdNhomBenhNhan != value))
				{
					this.OnIdNhomBenhNhanChanging(value);
					this.SendPropertyChanging();
					this._IdNhomBenhNhan = value;
					this.SendPropertyChanged("IdNhomBenhNhan");
					this.OnIdNhomBenhNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(100)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomBenhNhan_BenhNhan", Storage="_BenhNhans", ThisKey="IdNhomBenhNhan", OtherKey="IdNhomBenhNhan")]
		public EntitySet<BenhNhan> BenhNhans
		{
			get
			{
				return this._BenhNhans;
			}
			set
			{
				this._BenhNhans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenhNhans(BenhNhan entity)
		{
			this.SendPropertyChanging();
			entity.NhomBenhNhan = this;
		}
		
		private void detach_BenhNhans(BenhNhan entity)
		{
			this.SendPropertyChanging();
			entity.NhomBenhNhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomNhanVien")]
	public partial class NhomNhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNhomNhanVien;
		
		private string _TenNhomNhanVien;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNhomNhanVienChanging(int value);
    partial void OnIdNhomNhanVienChanged();
    partial void OnTenNhomNhanVienChanging(string value);
    partial void OnTenNhomNhanVienChanged();
    #endregion
		
		public NhomNhanVien()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhomNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNhomNhanVien
		{
			get
			{
				return this._IdNhomNhanVien;
			}
			set
			{
				if ((this._IdNhomNhanVien != value))
				{
					this.OnIdNhomNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhomNhanVien = value;
					this.SendPropertyChanged("IdNhomNhanVien");
					this.OnIdNhomNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhomNhanVien", DbType="NVarChar(100)")]
		public string TenNhomNhanVien
		{
			get
			{
				return this._TenNhomNhanVien;
			}
			set
			{
				if ((this._TenNhomNhanVien != value))
				{
					this.OnTenNhomNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhomNhanVien = value;
					this.SendPropertyChanged("TenNhomNhanVien");
					this.OnTenNhomNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomNhanVien_NhanVien", Storage="_NhanViens", ThisKey="IdNhomNhanVien", OtherKey="IdNhomNhanVien")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomNhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdQuyenChanging(int value);
    partial void OnIdQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdQuyen
		{
			get
			{
				return this._IdQuyen;
			}
			set
			{
				if ((this._IdQuyen != value))
				{
					this.OnIdQuyenChanging(value);
					this.SendPropertyChanging();
					this._IdQuyen = value;
					this.SendPropertyChanged("IdQuyen");
					this.OnIdQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(50)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_TaiKhoan", Storage="_TaiKhoans", ThisKey="IdQuyen", OtherKey="IDQuyen")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanUng")]
	public partial class PhanUng : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPhanUng;
		
		private string _TenPhanUng;
		
		private System.Nullable<int> _MucDo;
		
		private EntitySet<ChiTietTrieuChung> _ChiTietTrieuChungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPhanUngChanging(int value);
    partial void OnIdPhanUngChanged();
    partial void OnTenPhanUngChanging(string value);
    partial void OnTenPhanUngChanged();
    partial void OnMucDoChanging(System.Nullable<int> value);
    partial void OnMucDoChanged();
    #endregion
		
		public PhanUng()
		{
			this._ChiTietTrieuChungs = new EntitySet<ChiTietTrieuChung>(new Action<ChiTietTrieuChung>(this.attach_ChiTietTrieuChungs), new Action<ChiTietTrieuChung>(this.detach_ChiTietTrieuChungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhanUng", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPhanUng
		{
			get
			{
				return this._IdPhanUng;
			}
			set
			{
				if ((this._IdPhanUng != value))
				{
					this.OnIdPhanUngChanging(value);
					this.SendPropertyChanging();
					this._IdPhanUng = value;
					this.SendPropertyChanged("IdPhanUng");
					this.OnIdPhanUngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhanUng", DbType="NVarChar(100)")]
		public string TenPhanUng
		{
			get
			{
				return this._TenPhanUng;
			}
			set
			{
				if ((this._TenPhanUng != value))
				{
					this.OnTenPhanUngChanging(value);
					this.SendPropertyChanging();
					this._TenPhanUng = value;
					this.SendPropertyChanged("TenPhanUng");
					this.OnTenPhanUngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucDo", DbType="Int")]
		public System.Nullable<int> MucDo
		{
			get
			{
				return this._MucDo;
			}
			set
			{
				if ((this._MucDo != value))
				{
					this.OnMucDoChanging(value);
					this.SendPropertyChanging();
					this._MucDo = value;
					this.SendPropertyChanged("MucDo");
					this.OnMucDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanUng_ChiTietTrieuChung", Storage="_ChiTietTrieuChungs", ThisKey="IdPhanUng", OtherKey="IdPhanUng")]
		public EntitySet<ChiTietTrieuChung> ChiTietTrieuChungs
		{
			get
			{
				return this._ChiTietTrieuChungs;
			}
			set
			{
				this._ChiTietTrieuChungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTrieuChungs(ChiTietTrieuChung entity)
		{
			this.SendPropertyChanging();
			entity.PhanUng = this;
		}
		
		private void detach_ChiTietTrieuChungs(ChiTietTrieuChung entity)
		{
			this.SendPropertyChanging();
			entity.PhanUng = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuKham")]
	public partial class PhieuKham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSoPhieu;
		
		private System.Nullable<int> _IdNhanVien;
		
		private System.Nullable<int> _IdPhong;
		
		private System.Nullable<int> _IdBenhNhan;
		
		private System.Nullable<int> _IdThongTinThaiKy;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntityRef<BenhNhan> _BenhNhan;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<ThongTinThaiKy> _ThongTinThaiKy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSoPhieuChanging(int value);
    partial void OnIdSoPhieuChanged();
    partial void OnIdNhanVienChanging(System.Nullable<int> value);
    partial void OnIdNhanVienChanged();
    partial void OnIdPhongChanging(System.Nullable<int> value);
    partial void OnIdPhongChanged();
    partial void OnIdBenhNhanChanging(System.Nullable<int> value);
    partial void OnIdBenhNhanChanged();
    partial void OnIdThongTinThaiKyChanging(System.Nullable<int> value);
    partial void OnIdThongTinThaiKyChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public PhieuKham()
		{
			this._BenhNhan = default(EntityRef<BenhNhan>);
			this._NhanVien = default(EntityRef<NhanVien>);
			this._Phong = default(EntityRef<Phong>);
			this._ThongTinThaiKy = default(EntityRef<ThongTinThaiKy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSoPhieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSoPhieu
		{
			get
			{
				return this._IdSoPhieu;
			}
			set
			{
				if ((this._IdSoPhieu != value))
				{
					this.OnIdSoPhieuChanging(value);
					this.SendPropertyChanging();
					this._IdSoPhieu = value;
					this.SendPropertyChanged("IdSoPhieu");
					this.OnIdSoPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhanVien", DbType="Int")]
		public System.Nullable<int> IdNhanVien
		{
			get
			{
				return this._IdNhanVien;
			}
			set
			{
				if ((this._IdNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhanVien = value;
					this.SendPropertyChanged("IdNhanVien");
					this.OnIdNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhong", DbType="Int")]
		public System.Nullable<int> IdPhong
		{
			get
			{
				return this._IdPhong;
			}
			set
			{
				if ((this._IdPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPhongChanging(value);
					this.SendPropertyChanging();
					this._IdPhong = value;
					this.SendPropertyChanged("IdPhong");
					this.OnIdPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBenhNhan", DbType="Int")]
		public System.Nullable<int> IdBenhNhan
		{
			get
			{
				return this._IdBenhNhan;
			}
			set
			{
				if ((this._IdBenhNhan != value))
				{
					if (this._BenhNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBenhNhanChanging(value);
					this.SendPropertyChanging();
					this._IdBenhNhan = value;
					this.SendPropertyChanged("IdBenhNhan");
					this.OnIdBenhNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdThongTinThaiKy", DbType="Int")]
		public System.Nullable<int> IdThongTinThaiKy
		{
			get
			{
				return this._IdThongTinThaiKy;
			}
			set
			{
				if ((this._IdThongTinThaiKy != value))
				{
					if (this._ThongTinThaiKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdThongTinThaiKyChanging(value);
					this.SendPropertyChanging();
					this._IdThongTinThaiKy = value;
					this.SendPropertyChanged("IdThongTinThaiKy");
					this.OnIdThongTinThaiKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_PhieuKham", Storage="_BenhNhan", ThisKey="IdBenhNhan", OtherKey="IdBenhNhan", IsForeignKey=true)]
		public BenhNhan BenhNhan
		{
			get
			{
				return this._BenhNhan.Entity;
			}
			set
			{
				BenhNhan previousValue = this._BenhNhan.Entity;
				if (((previousValue != value) 
							|| (this._BenhNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenhNhan.Entity = null;
						previousValue.PhieuKhams.Remove(this);
					}
					this._BenhNhan.Entity = value;
					if ((value != null))
					{
						value.PhieuKhams.Add(this);
						this._IdBenhNhan = value.IdBenhNhan;
					}
					else
					{
						this._IdBenhNhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("BenhNhan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuKham", Storage="_NhanVien", ThisKey="IdNhanVien", OtherKey="IdNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuKhams.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuKhams.Add(this);
						this._IdNhanVien = value.IdNhanVien;
					}
					else
					{
						this._IdNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_PhieuKham", Storage="_Phong", ThisKey="IdPhong", OtherKey="IdPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.PhieuKhams.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.PhieuKhams.Add(this);
						this._IdPhong = value.IdPhong;
					}
					else
					{
						this._IdPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinThaiKy_PhieuKham", Storage="_ThongTinThaiKy", ThisKey="IdThongTinThaiKy", OtherKey="IdThongTinThaiKy", IsForeignKey=true)]
		public ThongTinThaiKy ThongTinThaiKy
		{
			get
			{
				return this._ThongTinThaiKy.Entity;
			}
			set
			{
				ThongTinThaiKy previousValue = this._ThongTinThaiKy.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinThaiKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinThaiKy.Entity = null;
						previousValue.PhieuKhams.Remove(this);
					}
					this._ThongTinThaiKy.Entity = value;
					if ((value != null))
					{
						value.PhieuKhams.Add(this);
						this._IdThongTinThaiKy = value.IdThongTinThaiKy;
					}
					else
					{
						this._IdThongTinThaiKy = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinThaiKy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuTiemChung")]
	public partial class PhieuTiemChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSoPhieu;
		
		private System.Nullable<int> _IdNhanVien;
		
		private System.Nullable<int> _IdPhong;
		
		private System.Nullable<int> _IdBenhNhan;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<ChiTietTiemChung> _ChiTietTiemChungs;
		
		private EntityRef<BenhNhan> _BenhNhan;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSoPhieuChanging(int value);
    partial void OnIdSoPhieuChanged();
    partial void OnIdNhanVienChanging(System.Nullable<int> value);
    partial void OnIdNhanVienChanged();
    partial void OnIdPhongChanging(System.Nullable<int> value);
    partial void OnIdPhongChanged();
    partial void OnIdBenhNhanChanging(System.Nullable<int> value);
    partial void OnIdBenhNhanChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public PhieuTiemChung()
		{
			this._ChiTietTiemChungs = new EntitySet<ChiTietTiemChung>(new Action<ChiTietTiemChung>(this.attach_ChiTietTiemChungs), new Action<ChiTietTiemChung>(this.detach_ChiTietTiemChungs));
			this._BenhNhan = default(EntityRef<BenhNhan>);
			this._NhanVien = default(EntityRef<NhanVien>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSoPhieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSoPhieu
		{
			get
			{
				return this._IdSoPhieu;
			}
			set
			{
				if ((this._IdSoPhieu != value))
				{
					this.OnIdSoPhieuChanging(value);
					this.SendPropertyChanging();
					this._IdSoPhieu = value;
					this.SendPropertyChanged("IdSoPhieu");
					this.OnIdSoPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhanVien", DbType="Int")]
		public System.Nullable<int> IdNhanVien
		{
			get
			{
				return this._IdNhanVien;
			}
			set
			{
				if ((this._IdNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhanVien = value;
					this.SendPropertyChanged("IdNhanVien");
					this.OnIdNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhong", DbType="Int")]
		public System.Nullable<int> IdPhong
		{
			get
			{
				return this._IdPhong;
			}
			set
			{
				if ((this._IdPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPhongChanging(value);
					this.SendPropertyChanging();
					this._IdPhong = value;
					this.SendPropertyChanged("IdPhong");
					this.OnIdPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBenhNhan", DbType="Int")]
		public System.Nullable<int> IdBenhNhan
		{
			get
			{
				return this._IdBenhNhan;
			}
			set
			{
				if ((this._IdBenhNhan != value))
				{
					if (this._BenhNhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBenhNhanChanging(value);
					this.SendPropertyChanging();
					this._IdBenhNhan = value;
					this.SendPropertyChanged("IdBenhNhan");
					this.OnIdBenhNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuTiemChung_ChiTietTiemChung", Storage="_ChiTietTiemChungs", ThisKey="IdSoPhieu", OtherKey="IdSoPhieu")]
		public EntitySet<ChiTietTiemChung> ChiTietTiemChungs
		{
			get
			{
				return this._ChiTietTiemChungs;
			}
			set
			{
				this._ChiTietTiemChungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenhNhan_PhieuTiemChung", Storage="_BenhNhan", ThisKey="IdBenhNhan", OtherKey="IdBenhNhan", IsForeignKey=true)]
		public BenhNhan BenhNhan
		{
			get
			{
				return this._BenhNhan.Entity;
			}
			set
			{
				BenhNhan previousValue = this._BenhNhan.Entity;
				if (((previousValue != value) 
							|| (this._BenhNhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenhNhan.Entity = null;
						previousValue.PhieuTiemChungs.Remove(this);
					}
					this._BenhNhan.Entity = value;
					if ((value != null))
					{
						value.PhieuTiemChungs.Add(this);
						this._IdBenhNhan = value.IdBenhNhan;
					}
					else
					{
						this._IdBenhNhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("BenhNhan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuTiemChung", Storage="_NhanVien", ThisKey="IdNhanVien", OtherKey="IdNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuTiemChungs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuTiemChungs.Add(this);
						this._IdNhanVien = value.IdNhanVien;
					}
					else
					{
						this._IdNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_PhieuTiemChung", Storage="_Phong", ThisKey="IdPhong", OtherKey="IdPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.PhieuTiemChungs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.PhieuTiemChungs.Add(this);
						this._IdPhong = value.IdPhong;
					}
					else
					{
						this._IdPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTiemChungs(ChiTietTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTiemChung = this;
		}
		
		private void detach_ChiTietTiemChungs(ChiTietTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.PhieuTiemChung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPhong;
		
		private System.Nullable<int> _IdLoaiPhong;
		
		private string _TenPhong;
		
		private string _TinhTrang;
		
		private EntitySet<PhieuKham> _PhieuKhams;
		
		private EntitySet<PhieuTiemChung> _PhieuTiemChungs;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPhongChanging(int value);
    partial void OnIdPhongChanged();
    partial void OnIdLoaiPhongChanging(System.Nullable<int> value);
    partial void OnIdLoaiPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public Phong()
		{
			this._PhieuKhams = new EntitySet<PhieuKham>(new Action<PhieuKham>(this.attach_PhieuKhams), new Action<PhieuKham>(this.detach_PhieuKhams));
			this._PhieuTiemChungs = new EntitySet<PhieuTiemChung>(new Action<PhieuTiemChung>(this.attach_PhieuTiemChungs), new Action<PhieuTiemChung>(this.detach_PhieuTiemChungs));
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPhong
		{
			get
			{
				return this._IdPhong;
			}
			set
			{
				if ((this._IdPhong != value))
				{
					this.OnIdPhongChanging(value);
					this.SendPropertyChanging();
					this._IdPhong = value;
					this.SendPropertyChanged("IdPhong");
					this.OnIdPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoaiPhong", DbType="Int")]
		public System.Nullable<int> IdLoaiPhong
		{
			get
			{
				return this._IdLoaiPhong;
			}
			set
			{
				if ((this._IdLoaiPhong != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._IdLoaiPhong = value;
					this.SendPropertyChanged("IdLoaiPhong");
					this.OnIdLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(100)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(100)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_PhieuKham", Storage="_PhieuKhams", ThisKey="IdPhong", OtherKey="IdPhong")]
		public EntitySet<PhieuKham> PhieuKhams
		{
			get
			{
				return this._PhieuKhams;
			}
			set
			{
				this._PhieuKhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_PhieuTiemChung", Storage="_PhieuTiemChungs", ThisKey="IdPhong", OtherKey="IdPhong")]
		public EntitySet<PhieuTiemChung> PhieuTiemChungs
		{
			get
			{
				return this._PhieuTiemChungs;
			}
			set
			{
				this._PhieuTiemChungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LoaiPhong", ThisKey="IdLoaiPhong", OtherKey="IdLoaiPhong", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._IdLoaiPhong = value.IdLoaiPhong;
					}
					else
					{
						this._IdLoaiPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_PhieuTiemChungs(PhieuTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_PhieuTiemChungs(PhieuTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuKien")]
	public partial class SuKien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSuKien;
		
		private int _IdNhanVien;
		
		private string _TenSuKien;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _GhiChu;
		
		private EntitySet<DangKySuKien> _DangKySuKiens;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSuKienChanging(int value);
    partial void OnIdSuKienChanged();
    partial void OnIdNhanVienChanging(int value);
    partial void OnIdNhanVienChanged();
    partial void OnTenSuKienChanging(string value);
    partial void OnTenSuKienChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public SuKien()
		{
			this._DangKySuKiens = new EntitySet<DangKySuKien>(new Action<DangKySuKien>(this.attach_DangKySuKiens), new Action<DangKySuKien>(this.detach_DangKySuKiens));
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSuKien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSuKien
		{
			get
			{
				return this._IdSuKien;
			}
			set
			{
				if ((this._IdSuKien != value))
				{
					this.OnIdSuKienChanging(value);
					this.SendPropertyChanging();
					this._IdSuKien = value;
					this.SendPropertyChanged("IdSuKien");
					this.OnIdSuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhanVien", DbType="Int NOT NULL")]
		public int IdNhanVien
		{
			get
			{
				return this._IdNhanVien;
			}
			set
			{
				if ((this._IdNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IdNhanVien = value;
					this.SendPropertyChanged("IdNhanVien");
					this.OnIdNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSuKien", DbType="NVarChar(100)")]
		public string TenSuKien
		{
			get
			{
				return this._TenSuKien;
			}
			set
			{
				if ((this._TenSuKien != value))
				{
					this.OnTenSuKienChanging(value);
					this.SendPropertyChanging();
					this._TenSuKien = value;
					this.SendPropertyChanged("TenSuKien");
					this.OnTenSuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SuKien_DangKySuKien", Storage="_DangKySuKiens", ThisKey="IdSuKien", OtherKey="IdSuKien")]
		public EntitySet<DangKySuKien> DangKySuKiens
		{
			get
			{
				return this._DangKySuKiens;
			}
			set
			{
				this._DangKySuKiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_SuKien", Storage="_NhanVien", ThisKey="IdNhanVien", OtherKey="IdNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.SuKiens.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.SuKiens.Add(this);
						this._IdNhanVien = value.IdNhanVien;
					}
					else
					{
						this._IdNhanVien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKySuKiens(DangKySuKien entity)
		{
			this.SendPropertyChanging();
			entity.SuKien = this;
		}
		
		private void detach_DangKySuKiens(DangKySuKien entity)
		{
			this.SendPropertyChanging();
			entity.SuKien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTK;
		
		private System.Nullable<int> _IDNV;
		
		private string _TenTK;
		
		private string _MatKhau;
		
		private System.Nullable<int> _IDQuyen;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<PhanQuyen> _PhanQuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTKChanging(int value);
    partial void OnIDTKChanged();
    partial void OnIDNVChanging(System.Nullable<int> value);
    partial void OnIDNVChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnIDQuyenChanging(System.Nullable<int> value);
    partial void OnIDQuyenChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._PhanQuyen = default(EntityRef<PhanQuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTK
		{
			get
			{
				return this._IDTK;
			}
			set
			{
				if ((this._IDTK != value))
				{
					this.OnIDTKChanging(value);
					this.SendPropertyChanging();
					this._IDTK = value;
					this.SendPropertyChanged("IDTK");
					this.OnIDTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNV", DbType="Int")]
		public System.Nullable<int> IDNV
		{
			get
			{
				return this._IDNV;
			}
			set
			{
				if ((this._IDNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNVChanging(value);
					this.SendPropertyChanging();
					this._IDNV = value;
					this.SendPropertyChanged("IDNV");
					this.OnIDNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQuyen", DbType="Int")]
		public System.Nullable<int> IDQuyen
		{
			get
			{
				return this._IDQuyen;
			}
			set
			{
				if ((this._IDQuyen != value))
				{
					if (this._PhanQuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDQuyenChanging(value);
					this.SendPropertyChanging();
					this._IDQuyen = value;
					this.SendPropertyChanged("IDQuyen");
					this.OnIDQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="IDNV", OtherKey="IdNhanVien", IsForeignKey=true, DeleteRule="CASCADE")]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._IDNV = value.IdNhanVien;
					}
					else
					{
						this._IDNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_TaiKhoan", Storage="_PhanQuyen", ThisKey="IDQuyen", OtherKey="IdQuyen", IsForeignKey=true, DeleteRule="CASCADE")]
		public PhanQuyen PhanQuyen
		{
			get
			{
				return this._PhanQuyen.Entity;
			}
			set
			{
				PhanQuyen previousValue = this._PhanQuyen.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._PhanQuyen.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._IDQuyen = value.IdQuyen;
					}
					else
					{
						this._IDQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhanQuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTinThaiKy")]
	public partial class ThongTinThaiKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdThongTinThaiKy;
		
		private System.Nullable<double> _TuanTuoi;
		
		private System.Nullable<double> _ChieuDai;
		
		private System.Nullable<double> _CanNang;
		
		private System.Nullable<int> _GioiTinh;
		
		private string _GhiChu;
		
		private EntitySet<PhieuKham> _PhieuKhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdThongTinThaiKyChanging(int value);
    partial void OnIdThongTinThaiKyChanged();
    partial void OnTuanTuoiChanging(System.Nullable<double> value);
    partial void OnTuanTuoiChanged();
    partial void OnChieuDaiChanging(System.Nullable<double> value);
    partial void OnChieuDaiChanged();
    partial void OnCanNangChanging(System.Nullable<double> value);
    partial void OnCanNangChanged();
    partial void OnGioiTinhChanging(System.Nullable<int> value);
    partial void OnGioiTinhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public ThongTinThaiKy()
		{
			this._PhieuKhams = new EntitySet<PhieuKham>(new Action<PhieuKham>(this.attach_PhieuKhams), new Action<PhieuKham>(this.detach_PhieuKhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdThongTinThaiKy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdThongTinThaiKy
		{
			get
			{
				return this._IdThongTinThaiKy;
			}
			set
			{
				if ((this._IdThongTinThaiKy != value))
				{
					this.OnIdThongTinThaiKyChanging(value);
					this.SendPropertyChanging();
					this._IdThongTinThaiKy = value;
					this.SendPropertyChanged("IdThongTinThaiKy");
					this.OnIdThongTinThaiKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TuanTuoi", DbType="Float")]
		public System.Nullable<double> TuanTuoi
		{
			get
			{
				return this._TuanTuoi;
			}
			set
			{
				if ((this._TuanTuoi != value))
				{
					this.OnTuanTuoiChanging(value);
					this.SendPropertyChanging();
					this._TuanTuoi = value;
					this.SendPropertyChanged("TuanTuoi");
					this.OnTuanTuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChieuDai", DbType="Float")]
		public System.Nullable<double> ChieuDai
		{
			get
			{
				return this._ChieuDai;
			}
			set
			{
				if ((this._ChieuDai != value))
				{
					this.OnChieuDaiChanging(value);
					this.SendPropertyChanging();
					this._ChieuDai = value;
					this.SendPropertyChanged("ChieuDai");
					this.OnChieuDaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanNang", DbType="Float")]
		public System.Nullable<double> CanNang
		{
			get
			{
				return this._CanNang;
			}
			set
			{
				if ((this._CanNang != value))
				{
					this.OnCanNangChanging(value);
					this.SendPropertyChanging();
					this._CanNang = value;
					this.SendPropertyChanged("CanNang");
					this.OnCanNangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Int")]
		public System.Nullable<int> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinThaiKy_PhieuKham", Storage="_PhieuKhams", ThisKey="IdThongTinThaiKy", OtherKey="IdThongTinThaiKy")]
		public EntitySet<PhieuKham> PhieuKhams
		{
			get
			{
				return this._PhieuKhams;
			}
			set
			{
				this._PhieuKhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinThaiKy = this;
		}
		
		private void detach_PhieuKhams(PhieuKham entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinThaiKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrieuChung")]
	public partial class TrieuChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTrieuChung;
		
		private string _TenTrieuChung;
		
		private EntitySet<ChiTietTrieuChung> _ChiTietTrieuChungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTrieuChungChanging(int value);
    partial void OnIdTrieuChungChanged();
    partial void OnTenTrieuChungChanging(string value);
    partial void OnTenTrieuChungChanged();
    #endregion
		
		public TrieuChung()
		{
			this._ChiTietTrieuChungs = new EntitySet<ChiTietTrieuChung>(new Action<ChiTietTrieuChung>(this.attach_ChiTietTrieuChungs), new Action<ChiTietTrieuChung>(this.detach_ChiTietTrieuChungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTrieuChung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTrieuChung
		{
			get
			{
				return this._IdTrieuChung;
			}
			set
			{
				if ((this._IdTrieuChung != value))
				{
					this.OnIdTrieuChungChanging(value);
					this.SendPropertyChanging();
					this._IdTrieuChung = value;
					this.SendPropertyChanged("IdTrieuChung");
					this.OnIdTrieuChungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTrieuChung", DbType="NVarChar(100)")]
		public string TenTrieuChung
		{
			get
			{
				return this._TenTrieuChung;
			}
			set
			{
				if ((this._TenTrieuChung != value))
				{
					this.OnTenTrieuChungChanging(value);
					this.SendPropertyChanging();
					this._TenTrieuChung = value;
					this.SendPropertyChanged("TenTrieuChung");
					this.OnTenTrieuChungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrieuChung_ChiTietTrieuChung", Storage="_ChiTietTrieuChungs", ThisKey="IdTrieuChung", OtherKey="IdTrieuChung")]
		public EntitySet<ChiTietTrieuChung> ChiTietTrieuChungs
		{
			get
			{
				return this._ChiTietTrieuChungs;
			}
			set
			{
				this._ChiTietTrieuChungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietTrieuChungs(ChiTietTrieuChung entity)
		{
			this.SendPropertyChanging();
			entity.TrieuChung = this;
		}
		
		private void detach_ChiTietTrieuChungs(ChiTietTrieuChung entity)
		{
			this.SendPropertyChanging();
			entity.TrieuChung = null;
		}
	}
	
	public partial class SP_ALLBNResult
	{
		
		private int _IdBenhNhan;
		
		private string _TenNhom;
		
		private string _HoTen;
		
		private string _CCCD;
		
		private string _BHYT;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SDT;
		
		private string _Email;
		
		private string _DiaChi;
		
		private System.Nullable<double> _ChieuCao;
		
		private System.Nullable<double> _CanNang;
		
		public SP_ALLBNResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBenhNhan", DbType="Int NOT NULL")]
		public int IdBenhNhan
		{
			get
			{
				return this._IdBenhNhan;
			}
			set
			{
				if ((this._IdBenhNhan != value))
				{
					this._IdBenhNhan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(100)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this._TenNhom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this._HoTen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="NVarChar(50)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this._CCCD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHYT", DbType="NVarChar(100)")]
		public string BHYT
		{
			get
			{
				return this._BHYT;
			}
			set
			{
				if ((this._BHYT != value))
				{
					this._BHYT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(4)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this._GioiTinh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this._NgaySinh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(100)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this._SDT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this._DiaChi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChieuCao", DbType="Float")]
		public System.Nullable<double> ChieuCao
		{
			get
			{
				return this._ChieuCao;
			}
			set
			{
				if ((this._ChieuCao != value))
				{
					this._ChieuCao = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanNang", DbType="Float")]
		public System.Nullable<double> CanNang
		{
			get
			{
				return this._CanNang;
			}
			set
			{
				if ((this._CanNang != value))
				{
					this._CanNang = value;
				}
			}
		}
	}
	
	public partial class SP_BMIResult
	{
		
		private int _IdBenhNhan;
		
		private string _HoTen;
		
		private string _CanhBao;
		
		private System.Nullable<double> _BMI_của_trẻ_em;
		
		private System.Nullable<int> _Tuổi;
		
		public SP_BMIResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBenhNhan", DbType="Int NOT NULL")]
		public int IdBenhNhan
		{
			get
			{
				return this._IdBenhNhan;
			}
			set
			{
				if ((this._IdBenhNhan != value))
				{
					this._IdBenhNhan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this._HoTen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanhBao", DbType="NVarChar(500)")]
		public string CanhBao
		{
			get
			{
				return this._CanhBao;
			}
			set
			{
				if ((this._CanhBao != value))
				{
					this._CanhBao = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BMI của trẻ em]", Storage="_BMI_của_trẻ_em", DbType="Float")]
		public System.Nullable<double> BMI_của_trẻ_em
		{
			get
			{
				return this._BMI_của_trẻ_em;
			}
			set
			{
				if ((this._BMI_của_trẻ_em != value))
				{
					this._BMI_của_trẻ_em = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuổi", DbType="Int")]
		public System.Nullable<int> Tuổi
		{
			get
			{
				return this._Tuổi;
			}
			set
			{
				if ((this._Tuổi != value))
				{
					this._Tuổi = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
